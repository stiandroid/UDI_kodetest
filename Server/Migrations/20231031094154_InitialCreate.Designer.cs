// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UDI_kodetest.Server.Data;

#nullable disable

namespace UDI_kodetest.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231031094154_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UDI_kodetest.Shared.Models.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etternavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fodselsdato")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fornavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mellomnavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobilnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poststed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reisedokumentnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personer");
                });

            modelBuilder.Entity("UDI_kodetest.Shared.Models.Entities.Soknad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fullmektig")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KontaktId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendtSms")
                        .HasColumnType("bit");

                    b.Property<Guid>("SokerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VedtakId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_attachments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_etag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_rid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_self")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_ts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KontaktId")
                        .IsUnique();

                    b.HasIndex("SokerId")
                        .IsUnique();

                    b.HasIndex("VedtakId")
                        .IsUnique();

                    b.ToTable("Soknader");
                });

            modelBuilder.Entity("UDI_kodetest.Shared.Models.Entities.Vedtak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Authority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GyldigFra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GyldigTil")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vedtak");
                });

            modelBuilder.Entity("UDI_kodetest.Shared.Models.Entities.Soknad", b =>
                {
                    b.HasOne("UDI_kodetest.Shared.Models.Entities.Person", "Kontakt")
                        .WithOne()
                        .HasForeignKey("UDI_kodetest.Shared.Models.Entities.Soknad", "KontaktId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UDI_kodetest.Shared.Models.Entities.Person", "Soker")
                        .WithOne()
                        .HasForeignKey("UDI_kodetest.Shared.Models.Entities.Soknad", "SokerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UDI_kodetest.Shared.Models.Entities.Vedtak", "Vedtak")
                        .WithOne()
                        .HasForeignKey("UDI_kodetest.Shared.Models.Entities.Soknad", "VedtakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontakt");

                    b.Navigation("Soker");

                    b.Navigation("Vedtak");
                });
#pragma warning restore 612, 618
        }
    }
}
